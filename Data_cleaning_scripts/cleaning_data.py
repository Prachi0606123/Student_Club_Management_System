# -*- coding: utf-8 -*-
"""Cleaning_Data

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MpscIEc2Dq5AXHd2-0ag6-bcVIZpF0BB

## ZIP CODE TABLE
"""

import pandas as pd

data1 = pd.read_csv (r'Zip_Code.txt', delimiter='\t')
# data.to_csv (r'inter_zip_code.csv', index=None)
# data1 = pd.read_csv("inter_zip_code.csv")

# print(data1)
data1['zip_code'] = data1['zip_code'].astype(str)

# Define a function to perform zero-padding
def zero_pad_zip(zip_code):
    return zip_code.zfill(5) if len(zip_code) < 5 else zip_code

# Apply the function to 'zip_code' column
data1['zip_code'] = data1['zip_code'].apply(zero_pad_zip)

print(data1['zip_code'])

data1.columns = ['zip_code','type','city','county','state','short_state']
data1.to_csv('New1_Zip_code.csv', index=None)

"""## INCOME TABLE """

import pandas as pd

income = pd.read_csv(r'Income',delimiter='\t')

income['notes'] = income['notes'].str.replace(',','')
income['date_received'] = pd.to_datetime(income['date_received'],format='%m/%d/%Y')

income['date_received'] = income['date_received'].dt.strftime('%Y/%m/%d')
income['amount'] = income['amount'].astype(int)

income['income_id'] = income['income_id'].str[:20]
income['link_to_member'] = income['link_to_member'].str[:20]


income.columns = ['income_id','date_received','amount','source','notes','link_to_member']
income.to_csv('New_income.csv', index=None)

"""BUDGET TABLE

"""

import pandas as pd

budget = pd.read_csv(r'Budget',delimiter='\t')

budget['Budget_id'] = budget['Budget_id'].str[:20]
budget['link_to_event'] = budget['link_to_event'].str[:20]

budget['spent'] = budget['spent'].apply( lambda x: round(x,2))
budget['remaining'] = budget['remaining'].apply( lambda x: round(x,2))
budget['amount'] = budget['amount'].astype(int)

budget.column= ['Budget_id','category','spent','remaining','amount','event_closed','link_to_event']
budget.to_csv('New_Budget.csv', index=None)

"""Attendance TABLE

"""

import pandas as pd

attendance = pd.read_csv(r'Attendance',delimiter='\t')


attendance['link_to_event'] = attendance['link_to_event'].str[:20]
attendance['link_to_member'] = attendance['link_to_member'].str[:20]

attendance.column= ['link_to_event','link_to_member']
attendance.to_csv('New_attendance.csv', index=None)

"""Expense Table"""

import pandas as pd

data = pd.read_csv (r'Expense.txt', delimiter='\t')

data['expense_date']= pd.to_datetime(data['expense_date'], format='%Y-%m-%d')
# data['date'] = data['datetime'].dt.date
data['expense_date'] = data['expense_date'].dt.date


#data['notes'] = data['notes'].str.replace(',','')

data.columns = ['expense_id','expense_description','expense_date', 'cost', 'approved', 'link_to_member' ,'link_to_budget']
data.to_csv('New1_Expense.csv',index=None)

"""MAJOR table"""

import pandas as pd

data = pd.read_csv (r'Major.txt', delimiter='\t')

# Remove leading and trailing whitespace from all string columns
data1 = data1.apply(lambda x: x.str.strip() if x.dtype == "object" else x)

data1.to_csv (r'New_Major.csv', index=False)

"""MEMBER Table"""

import pandas as pd

data = pd.read_csv (r'Member.txt', delimiter='\t')

# Remove any leading/trailing whitespace from cells
data1 = data1.apply(lambda x: x.str.strip() if x.dtype == "object" else x)

# Convert zip codes to a consistent format (XXXXX)
data1['zip'] = data1['zip'].astype(str)

data1.to_csv (r'New_Member.csv', index=False)